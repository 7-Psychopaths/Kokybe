        -:    0:Source:ObjectMatrix.h
        -:    0:Graph:build/Debug/GNU-Linux-x86/MDS.gcno
        -:    0:Data:build/Debug/GNU-Linux-x86/MDS.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:///////////////////////////////////////////////////////////
        -:    2://  ObjectMatrix.h
        -:    3://  Implementation of the Class ObjectMatrix
        -:    4://  Created on:      07-Lie-2013 20:07:30
        -:    5://  Original author: Povilas
        -:    6:///////////////////////////////////////////////////////////
        -:    7:
        -:    8:#if !defined(EA_EAE79B7B_5151_41cf_A08C_CE61651B7393__INCLUDED_)
        -:    9:#define EA_EAE79B7B_5151_41cf_A08C_CE61651B7393__INCLUDED_
        -:   10:
        -:   11:#include "DataObject.h"
        -:   12:#include "DataMatrix.h"
        -:   13:#include <vector>
        -:   14:#include <string>
        -:   15:
        -:   16:
        -:   17:class ObjectMatrix : public DataMatrix
       41:   18:{
        -:   19:
        -:   20:public:
        -:   21:	ObjectMatrix();
        -:   22:	virtual ~ObjectMatrix();
        -:   23:        std::vector<DataObject> DataObjects;
        -:   24:	ObjectMatrix(std::string);
        -:   25:	ObjectMatrix(int count);
        -:   26:	ObjectMatrix(int m, int n);
        -:   27:	ObjectMatrix(int m, int n, int k);
        -:   28:	void addObject(DataObject object);
        -:   29:	DataObject getObjectAt(int index);
        -:   30:	int getObjectCount();
        -:   31:	void loadDataMatrix();
        -:   32:        std::vector<std::string> getFeaturesTitle();
        -:   33:	void saveDataMatrix(ObjectMatrix, const char*);
        -:   34:
        -:   35:private:
        -:   36:	int objectCount;
        -:   37:        std::vector<std::string> featureTitles;
        -:   38:        std::string fileName;
        -:   39:};
        -:   40:#endif // !defined(EA_EAE79B7B_5151_41cf_A08C_CE61651B7393__INCLUDED_)
