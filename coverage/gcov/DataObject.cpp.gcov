        -:    0:Source:DataObject.cpp
        -:    0:Graph:build/Debug/GNU-Linux-x86/DataObject.gcno
        -:    0:Data:build/Debug/GNU-Linux-x86/DataObject.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:///////////////////////////////////////////////////////////
        -:    2://  DataObject.cpp
        -:    3://  Implementation of the Class DataObject
        -:    4://  Created on:      07-Lie-2013 20:07:29
        -:    5://  Original author: Povilas
        -:    6:///////////////////////////////////////////////////////////
        -:    7:
        -:    8:/*! \class DataObject
        -:    9:    \brief A class of methods and attributes for manipulating features in data vectors.
        -:   10: */
        -:   11:
        -:   12:#include "DataObject.h"
        -:   13:
        -:   14:
     2150:   15:DataObject::DataObject(){
        -:   16:
     2150:   17:    classLabel = -1;
     2150:   18:}
        -:   19:
8397491338:   20:DataObject::~DataObject(){
        -:   21:
8397491338:   22:}
        -:   23:
    #####:   24:DataObject::DataObject(int feature_count){
        -:   25:
    #####:   26:    classLabel = -1;
    #####:   27:    featureCount = feature_count;
    #####:   28:}
        -:   29:
    26422:   30:DataObject::DataObject(std::vector<double> vector){
    26422:   31:    features = vector;
    52844:   32:    featureCount = features.size();
    26422:   33:}
        -:   34:
    #####:   35:DataObject::DataObject(int feature_count, int class_label){
        -:   36:    
    #####:   37:    featureCount = feature_count;
    #####:   38:    classLabel = class_label;
    #####:   39:}
        -:   40:
    #####:   41:int DataObject::getClassLabel(){
        -:   42:
    #####:   43:	return classLabel;
        -:   44:}
        -:   45:
1846628333:   46:int DataObject::getFeatureCount(){
        -:   47:    //return features.size();
1846650685:   48:    return featureCount;
        -:   49:}
        -:   50:
    #####:   51:void DataObject::setClassLabel(int class_Label){
    #####:   52:    classLabel = class_Label;
    #####:   53:}
        -:   54:
    22352:   55:bool DataObject::IsIdentical(DataObject obj)
        -:   56:{
    22352:   57:    bool ats = false;
    22352:   58:    int k = 0;
    22352:   59:    int n = obj.getFeatureCount();
   111760:   60:    for (int i = 0; i < n; i++)
    89408:   61:        if (this->features.at(i) == obj.features.at(i))
    49484:   62:            k++;
    22352:   63:    if (k == n)
    10850:   64:        ats = true;
        -:   65:    
    22352:   66:    return ats;    
        -:   67:}
        -:   68:
    #####:   69:void DataObject::setNumOfFeatures(int n)
        -:   70:{
    #####:   71:    features.reserve(n);
    #####:   72:}
        -:   73:
12081857230:   74:double DataObject::getFeatureAt(int index)
        -:   75:{
12081857230:   76:    return features.at(index);
        -:   77:}
        -:   78:
929189074:   79:void DataObject::updateFeature(int featureIndex, double newValue)
        -:   80:{
1858378148:   81:    features[featureIndex] = newValue;
929189074:   82:}
